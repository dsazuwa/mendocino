Table emails {
  email_id integer pk
  email varchar [unique, not null]
  created_at timestamp [not null]
}

Table admins {
  admin_id integer pk
  first_name varchar [not null]
  last_name varchar [not null]
  created_at timestamp [not null]
  updated_at timestamp [not null]
}

Table customers {
  customer_id integer pk
  first_name varchar [not null]
  last_name varchar [not null]
  created_at timestamp [not null]
  updated_at timestamp [not null]
}

Table admin_accounts {
  admin_id integer pk
  email_id varchar [not null]
  password varchar [not null]
  status enum_admin_accounts_status [not null]
  created_at timestamp [not null]
  updated_at timestamp [not null]
}

ref: admin_accounts.admin_id - admins.admin_id
ref: admin_accounts.email_id - emails.email_id

Table customer_accounts {
  customer_id integer pk
  email_id varchar [not null]
  password varchar
  status enum_customer_accounts_status [not null]
  created_at timestamp [not null]
  updated_at timestamp [not null]
}

ref: customer_accounts.customer_id - customers.customer_id
ref: customer_accounts.email_id - emails.email_id

Table admin_otps {
  otp_id integer pk
  admin_id integer [not null]
  type  enum_admin_otps_type [not null]
  password varchar [not null]
  expires_at timestamp [not null]

  Indexes {
    (admin_id, type) [unique]
  }
}

ref: admin_otps.admin_id > admins.admin_id

Table customer_otps {
  otp_id integer pk
  customer_id integer [not null]
  type  enum_customer_otps_type [not null]
  password varchar [not null]
  expires_at timestamp [not null]

  Indexes {
    (customer_id, type) [unique]
  }
}

ref: customer_otps.customer_id > customers.customer_id

Table customer_identities {
  identity_id integer pk
  customer_id integer [not null]
  provider enum_customer_identities_provider [not null]
  created_at timestamp [not null]
  updated_at timestamp [not null]

  Indexes {
    (customer_id, provider) [unique]
  }
}

ref: customer_identities.customer_id > customers.customer_id

Table roles {
  role_id integer pk
  name varchar [unique, not null]
}

Table admins_roles {
  admin_id integer [not null]
  role_id integer [not null]
  created_at timestamp [not null]
  updated_at timestamp [not null]

  Indexes {
    (admin_id, role_id) [unique]
  }
}

ref: admins_roles.admin_id > admins.admin_id
ref: admins_roles.role_id > roles.role_id

Table phones {
  phone_id integer pk
  phone_number varchar [unique, not null]
  created_at timestamp [not null]
}

Table admin_phones {
  admin_id integer pk [not null]
  phone_id integer [not null]
  status enum_admin_phones_status [not null]
  created_at timestamp [not null]
  updated_at timestamp [not null]
}

ref: admin_phones.admin_id - admins.admin_id
ref: admin_phones.phone_id - phones.phone_id

Table customer_phones {
  customer_id integer pk [not null]
  phone_id integer [not null]
  status enum_customer_phones_status [not null]
  created_at timestamp [not null]
  updated_at timestamp [not null]
}

ref: customer_phones.customer_id - customers.customer_id
ref: customer_phones.phone_id - phones.phone_id

Table addresses {
  address_id integer pk
  customer_id integer [not null]
  address_line_1 varchar [not null]
  address_line_2 varchar
  city varchar [not null]
  state varchar [not null]
  postal_code varchar [not null]
  created_at timestamp [not null]
  updated_at timestamp [not null]
}

ref: addresses.customer_id > customers.customer_id

Enum enum_admin_accounts_status {
  active
  pending
  inactive
  disabled
}

Enum enum_customer_accounts_status {
  active
  pending
  suspended
  disabled
}

Enum enum_admin_otps_type {
  email
  password
  phone
}

Enum enum_customer_otps_type {
  email
  password
  phone
}

Enum enum_customer_identities_provider {
  google
  facebook
}

Enum enum_admin_phones_status {
  active
  pending
}

Enum enum_customer_phones_status {
  active
  pending
}